{"ast":null,"code":"var _jsxFileName = \"/Users/manishverma/Desktop/Apple/Web/Office/RecruitingMonk/F-End/src/components/QnPostnPoll/AddPollForm.js\";\nimport React from 'react';\nimport { Grid, InputBase, Typography, NativeSelect, InputLabel, Button, TextField } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction AddPoll() {\n  const [state, setState] = React.useState({\n    pollTitle: '',\n    pollCategory: '',\n    pollExplanation: '',\n    option_array: [\"Option-0\"]\n  });\n\n  const handleInput = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    alert(\"Curent State is : \" + JSON.stringify(state));\n  };\n\n  const appendOption = () => {\n    var newInput = `Option-${state.option_array.length}`;\n    console.log(state.option_array.concat([newInput]));\n    setState(prevState => ({\n      option_array: prevState.option_array.concat([newInput])\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      background: 'white',\n      padding: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    fullWidth: true,\n    multiline: true,\n    rowsMax: 5,\n    placeholder: \"Type your poll title\",\n    required: true,\n    name: \"pollTitle\",\n    value: state.pollTitle,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: \"poll-cat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 4,\n    md: 2,\n    className: \"cat-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Select Category\")), /*#__PURE__*/React.createElement(Grid, {\n    xs: 6,\n    sm: 4,\n    md: 2,\n    className: \"cat-chooser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(NativeSelect, {\n    id: \"Category\",\n    name: \"pollCategory\",\n    className: \"cat-chooser-select\",\n    required: true,\n    fullWidth: true,\n    value: state.pollCategory,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Career\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Career\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Engagement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Engagement\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"HRTech\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"HRTech\")))), /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    style: {\n      background: 'white',\n      padding: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    placeholder: \"Explanation (Optional)\",\n    multiline: true,\n    fullWidth: true,\n    rowsMax: 20,\n    rows: 5,\n    name: \"pollExplanation\",\n    value: state.pollExplanation,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      background: 'white',\n      padding: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Add Polling Options\"), state.option_array.map(input => /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: input,\n    label: \"Type your option here\",\n    name: input,\n    fullwidth: true,\n    size: \"small\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Fab, {\n    style: {\n      marginLeft: '20px',\n      marginTop: '10px'\n    },\n    color: \"primary\",\n    size: \"small\",\n    onClick: appendOption,\n    \"aria-label\": \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      background: '#f2f2f2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"cancel\",\n    style: {\n      background: '#fff',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    style: {\n      background: '#b32800',\n      color: '#fff',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Add\"))));\n}\n\nexport default AddPoll;","map":{"version":3,"sources":["/Users/manishverma/Desktop/Apple/Web/Office/RecruitingMonk/F-End/src/components/QnPostnPoll/AddPollForm.js"],"names":["React","Grid","InputBase","Typography","NativeSelect","InputLabel","Button","TextField","Fab","AddIcon","AddPoll","state","setState","useState","pollTitle","pollCategory","pollExplanation","option_array","handleInput","event","target","name","value","handleSubmit","alert","JSON","stringify","appendOption","newInput","length","console","log","concat","prevState","background","padding","map","input","marginLeft","marginTop","marginRight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, InputBase, Typography, NativeSelect, InputLabel, Button, TextField } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nfunction AddPoll() {\n\n    const [state, setState] = React.useState({\n        pollTitle: '',\n        pollCategory: '',\n        pollExplanation: '',\n        option_array: [\"Option-0\"]\n    });\n    \n    const handleInput = (event) => {\n        setState({...state,\n            [event.target.name]: event.target.value\n        })\n    };\n    \n    const handleSubmit = () => {\n        alert(\"Curent State is : \" + JSON.stringify(state));\n    }\n\n    const appendOption = () => {\n        var newInput = `Option-${state.option_array.length}`;\n        console.log(state.option_array.concat([newInput]));\n        setState(prevState => ({\n          option_array: prevState.option_array.concat([newInput])\n        }));\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n        <Grid container>\n            <Grid item xs={12} style={{background: 'white', padding: '15px'}}> \n                <InputBase\n                    fullWidth\n                    multiline\n                    rowsMax={5}\n                    placeholder=\"Type your poll title\"\n                    required\n                    name=\"pollTitle\"\n                    value={state.pollTitle}\n                    onChange={handleInput}\n                />\n            </Grid>\n\n            <Grid container className=\"poll-cat-container\">\n                <Grid item xs={6} sm={4} md={2} className=\"cat-title\">\n                    <Typography>Select Category</Typography>\n                </Grid>\n                <Grid xs={6} sm={4} md={2} className=\"cat-chooser\">\n                <InputLabel htmlFor=\"Category\" />\n                    <NativeSelect id=\"Category\" name=\"pollCategory\" className=\"cat-chooser-select\" required={true} fullWidth\n                        value={state.pollCategory}  onChange={handleInput} >\n                        <option value=\"\" disabled selected>Category</option>\n                        <option value=\"Career\">Career</option>\n                        <option value=\"Engagement\">Engagement</option>\n                        <option value=\"HRTech\">HRTech</option>\n                    </NativeSelect>\n                </Grid>\n            </Grid>\n\n            <Grid xs={12} style={{background: 'white', padding: '15px'}}>\n                <InputBase\n                    placeholder=\"Explanation (Optional)\"\n                    multiline\n                    fullWidth\n                    rowsMax={20}\n                    rows={5}\n                    name=\"pollExplanation\"\n                    value={state.pollExplanation}  onChange={handleInput}\n                />\n            </Grid>\n            <Grid item xs={12} style={{background: 'white', padding: '15px'}}> \n                <Typography>Add Polling Options</Typography>\n                {state.option_array.map((input) => (\n                <Grid xs={12} container spacing={2}>\n                    <Grid xs={12} item>\n                        <TextField id={input} label=\"Type your option here\" name={input}\n                        fullwidth size=\"small\" required></TextField>\n                    \n                        <Fab style={{marginLeft: '20px', marginTop: '10px'}} color=\"primary\" size=\"small\" onClick={appendOption} aria-label=\"add\">\n                            <AddIcon />\n                        </Fab>\n                    </Grid>\n                </Grid>\n                ))}\n            </Grid>\n\n            <Grid item xs={12} style={{background: '#f2f2f2'}}>\n                <br/>\n            </Grid>\n            <Grid item xs={12} align=\"right\">\n                <Button type=\"cancel\" style={{background: '#fff', marginRight: '10px'}}>Cancel</Button>\n                <Button type=\"submit\" style={{background: '#b32800', color: '#fff', marginRight: '10px'}}>Add</Button>\n            </Grid>\n        </Grid>\n    </form>\n    );\n}\n\nexport default AddPoll;"]},"metadata":{},"sourceType":"module"}