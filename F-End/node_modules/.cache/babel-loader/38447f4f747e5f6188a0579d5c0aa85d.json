{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\"; // Redux persist packages\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [] // Those store constants which we want to persist\n\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet middleware = [thunk]; // Allow redux logger only in dev mode\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(logger);\n}\n\nconst store = createStore(persistedReducer, composeEnhancer(applyMiddleware(...middleware)));\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/home/jt/Documents/Monk Works/RecruitingMonk/F-End/src/redux/index.js"],"names":["createStore","applyMiddleware","compose","logger","thunk","persistStore","persistReducer","storage","rootReducer","persistConfig","key","whitelist","persistedReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middleware","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBH,EAAAA,OAFkB;AAGlBI,EAAAA,SAAS,EAAE,EAHO,CAGF;;AAHE,CAAtB;AAMA,MAAMC,gBAAgB,GAAGN,cAAc,CAACG,aAAD,EAAgBD,WAAhB,CAAvC;AACA,MAAMK,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+Cb,OAAvE;AAEA,IAAIc,UAAU,GAAG,CAACZ,KAAD,CAAjB,C,CAEA;;AACA,IAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCH,EAAAA,UAAU,CAACI,IAAX,CAAgBjB,MAAhB;AACH;;AAED,MAAMkB,KAAK,GAAGrB,WAAW,CACrBY,gBADqB,EAErBC,eAAe,CAACZ,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAFM,CAAzB;AAIA,MAAMM,SAAS,GAAGjB,YAAY,CAACgB,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBC,SAAhB","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\n// Redux persist packages\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: []   // Those store constants which we want to persist\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet middleware = [thunk];\n\n// Allow redux logger only in dev mode\nif (process.env.NODE_ENV !== \"production\") {\n    middleware.push(logger);\n}\n\nconst store = createStore(\n    persistedReducer,\n    composeEnhancer(applyMiddleware(...middleware))\n);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}