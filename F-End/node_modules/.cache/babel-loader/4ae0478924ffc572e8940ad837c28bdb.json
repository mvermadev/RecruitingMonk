{"ast":null,"code":"import { combineReducers, createStore } from \"redux\"; //below code.\n\nimport authReducer from './authReducer'; // store\n\nconst userSesStore = createStore(authReducer); //to update the state \n\nuserSesStore.subscribe(() => {\n  console.warn('my redux: ' + userSesStore.getState());\n}); //Action for state\n\nconst addUser = text => {\n  return {\n    type: \"SET_AUTH_TOKEN\",\n    payload: {\n      auth: text\n    }\n  };\n}; //assigning the new value to the state\n\n\nuserSesStore.dispatch(addUser('1234')); //above code.\n// import other reducers\n\nconst rootReducer = combineReducers({// Key Value map of reducers\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/manishverma/Desktop/Apple/Web/Office/RecruitingMonk/F-End/src/redux/reducers/index.js"],"names":["combineReducers","createStore","authReducer","userSesStore","subscribe","console","warn","getState","addUser","text","type","payload","auth","dispatch","rootReducer"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEI;;AACJ,MAAMC,YAAY,GAAGF,WAAW,CAACC,WAAD,CAAhC,C,CAEI;;AACJC,YAAY,CAACC,SAAb,CAAuB,MAAI;AACvBC,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAcH,YAAY,CAACI,QAAb,EAA3B;AACH,CAFD,E,CAII;;AACJ,MAAMC,OAAO,GAAGC,IAAI,IAAE;AAClB,SAAM;AACFC,IAAAA,IAAI,EAAE,gBADJ;AAEFC,IAAAA,OAAO,EAAE;AAACC,MAAAA,IAAI,EAAEH;AAAP;AAFP,GAAN;AAIH,CALD,C,CAOI;;;AACJN,YAAY,CAACU,QAAb,CAAsBL,OAAO,CAAC,MAAD,CAA7B,E,CAEA;AAEA;;AACA,MAAMM,WAAW,GAAGd,eAAe,CAAC,CAChC;AADgC,CAAD,CAAnC;AAIA,eAAec,WAAf","sourcesContent":["import { combineReducers, createStore } from \"redux\";\n//below code.\nimport authReducer from './authReducer'; \n\n    // store\nconst userSesStore = createStore(authReducer);\n\n    //to update the state \nuserSesStore.subscribe(()=>{\n    console.warn('my redux: '+ userSesStore.getState())\n})\n\n    //Action for state\nconst addUser = text=>{\n    return{\n        type: \"SET_AUTH_TOKEN\",\n        payload: {auth: text}    \n    }\n}\n\n    //assigning the new value to the state\nuserSesStore.dispatch(addUser('1234'))\n\n//above code.\n\n// import other reducers\nconst rootReducer = combineReducers({\n    // Key Value map of reducers\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}