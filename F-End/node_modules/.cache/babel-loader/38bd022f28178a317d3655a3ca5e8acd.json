{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\nimport authReducer from './authReducer'; //to update the state \n\nstore.subscribe(() => {\n  console.warn('my redux: ' + store.getState());\n}); //Action for state\n\nconst addUser = text => {\n  return {\n    type: \"SET_AUTH_TOKEN\",\n    payload: {\n      auth: text\n    }\n  };\n}; //assigning the new value to the state\n\n\nstore.dispatch(addUser('1123')); // import other reducers\n\nconst rootReducer = combineReducers({\n  // Key Value map of reducers\n  authUser: authReducer\n}); // store\n\nconst store = createStore(rootReducer);\nexport default rootReducer;","map":{"version":3,"sources":["/Users/manishverma/Desktop/Apple/Web/Office/RecruitingMonk/F-End/src/redux/reducers/index.js"],"names":["combineReducers","createStore","authReducer","store","subscribe","console","warn","getState","addUser","text","type","payload","auth","dispatch","rootReducer","authUser"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAGG;;AACAC,KAAK,CAACC,SAAN,CAAgB,MAAI;AACnBC,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAcH,KAAK,CAACI,QAAN,EAA3B;AACH,CAFE,E,CAIC;;AACJ,MAAMC,OAAO,GAAGC,IAAI,IAAE;AAClB,SAAM;AACFC,IAAAA,IAAI,EAAE,gBADJ;AAEFC,IAAAA,OAAO,EAAE;AAACC,MAAAA,IAAI,EAAEH;AAAP;AAFP,GAAN;AAIH,CALD,C,CAOI;;;AACJN,KAAK,CAACU,QAAN,CAAeL,OAAO,CAAC,MAAD,CAAtB,E,CAEA;;AACA,MAAMM,WAAW,GAAGd,eAAe,CAAC;AAChC;AACAe,EAAAA,QAAQ,EAAEb;AAFsB,CAAD,CAAnC,C,CAKI;;AACJ,MAAMC,KAAK,GAAGF,WAAW,CAACa,WAAD,CAAzB;AAGA,eAAeA,WAAf","sourcesContent":["import { combineReducers, createStore } from \"redux\";\nimport authReducer from './authReducer'; \n\n\n   //to update the state \n   store.subscribe(()=>{\n    console.warn('my redux: '+ store.getState())\n})\n\n    //Action for state\nconst addUser = text=>{\n    return{\n        type: \"SET_AUTH_TOKEN\",\n        payload: {auth: text}    \n    }\n}\n\n    //assigning the new value to the state\nstore.dispatch(addUser('1123'))\n\n// import other reducers\nconst rootReducer = combineReducers({\n    // Key Value map of reducers\n    authUser: authReducer\n});\n\n    // store\nconst store = createStore(rootReducer);\n\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}