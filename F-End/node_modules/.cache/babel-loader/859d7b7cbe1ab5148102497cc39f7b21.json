{"ast":null,"code":"var _jsxFileName = \"/Users/manishverma/Desktop/Apple/Web/Office/monk2/RecruitingMonk/F-End/src/components/Pages/Answers/Reply/ReplyCompo.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport '../Answers.css';\n\nclass ReplyCompo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReply = e => {\n      if (e.target.value === \"\") {\n        this.setState({\n          dis: true,\n          reply: \"\"\n        });\n      } else {\n        this.setState({\n          reply: e.target.value,\n          dis: false\n        });\n      }\n    };\n\n    this.submitReply = e => {\n      //database storing code will come here\n      this.setState({\n        reply: \"\",\n        dis: true\n      });\n    };\n\n    this.cancelReply = e => {\n      //hide the container\n      this.setState({\n        display: \"none\"\n      });\n    };\n\n    this.state = {\n      reply: \"\",\n      dis: true,\n      display: \"block\"\n    };\n  }\n\n  render() {\n    if (this.props.login === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reply-container\",\n        style: {\n          display: this.state.display\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        fullWidth: true,\n        multiline: true,\n        value: this.state.reply,\n        onChange: this.handleReply,\n        rowsMax: 100,\n        className: \"reply-field\",\n        rows: 4,\n        label: \"Your Reply\",\n        placeholder: \"Type Your Reply Here\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        align: \"right\",\n        style: {\n          paddingTop: '40px'\n        },\n        className: \"reply-container-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        className: \"Cancel-reply\",\n        onClick: this.cancelReply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        className: \"Submit-reply\",\n        disabled: this.state.dis,\n        onClick: this.submitReply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, \"Reply\"))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"You must be logged in to reply to an answer.\");\n    }\n  }\n\n}\n\nexport default ReplyCompo;","map":{"version":3,"sources":["/Users/manishverma/Desktop/Apple/Web/Office/monk2/RecruitingMonk/F-End/src/components/Pages/Answers/Reply/ReplyCompo.js"],"names":["React","Component","TextField","AttachmentIcon","InputAdornment","IconButton","Button","ReplyCompo","constructor","props","handleReply","e","target","value","setState","dis","reply","submitReply","cancelReply","display","state","render","login","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport '../Answers.css';\n\nclass ReplyCompo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reply: \"\",\n            dis: true,\n            display: \"block\"\n          };\n    }\n\n    handleReply = e => {\n\n        if ( e.target.value === \"\" ) {\n            this.setState({\n                dis: true,\n                reply: \"\"\n              });\n        }\n        else {\n        this.setState({\n          reply: e.target.value,\n          dis: false\n        });\n        }\n    };\n    \n      submitReply = e => {\n\n        //database storing code will come here\n    \n        this.setState({\n          reply: \"\",\n          dis: true\n        });\n      };\n\n      cancelReply = e => {\n        \n        //hide the container\n\n        this.setState({\n            display: \"none\"\n          });\n      }\n\n    render() {\n            \n        if( this.props.login === true) {   \n            return(\n            <div className=\"reply-container\" style={{display: this.state.display}}>\n            <form noValidate autoComplete=\"off\">\n            \n                <TextField fullWidth multiline value={this.state.reply}\n                onChange={this.handleReply} \n                rowsMax={100} className=\"reply-field\" rows={4}\n                label=\"Your Reply\" placeholder=\"Type Your Reply Here\" \n                variant=\"outlined\" />\n\n                    <div align=\"right\" style={{ paddingTop: '40px' }} className=\"reply-container-buttons\">\n                        <Button size=\"small\" variant=\"contained\" className=\"Cancel-reply\"\n                        onClick={this.cancelReply}\n                        >Cancel</Button>\n                        \n                        <Button size=\"small\" variant=\"contained\" className=\"Submit-reply\"\n                        disabled={this.state.dis}\n                        onClick={this.submitReply}\n                        >Reply</Button>\n                    </div>            \n            </form>\n            </div>\n            );\n        }\n        else {\n            return(\n                <div align=\"center\">You must be logged in to reply to an answer.</div>\n            );\n        }\n    }\n}\n\nexport default ReplyCompo;"]},"metadata":{},"sourceType":"module"}