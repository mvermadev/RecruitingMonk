{"ast":null,"code":"var _jsxFileName = \"/Users/manishverma/Desktop/Apple/Web/Office/monk2/RecruitingMonk/F-End/src/components/QnPostnPoll/AddPostForm.js\";\nimport React from 'react';\nimport { Grid, InputBase, Typography, InputLabel, NativeSelect, Button } from '@material-ui/core';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\n\nfunction AddPost(props) {\n  const [state, setState] = React.useState({\n    postTitle: '',\n    postCategory: '',\n    postExplanation: ''\n  });\n\n  const handleInput = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    alert(\"Curent State is : \" + JSON.stringify(state));\n  };\n\n  const sendPost = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", localStorage.getItem('token'));\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    var urlencoded = new URLSearchParams();\n    urlencoded.append(\"text\", state.postTitle);\n    urlencoded.append(\"name\", props.info.info.name);\n    urlencoded.append(\"avatar\", \"abc\");\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: 'follow'\n    };\n    fetch(\"https://recmonk.herokuapp.com/posts\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      background: 'white',\n      padding: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    fullWidth: true,\n    multiline: true,\n    rowsMax: 5,\n    placeholder: \"Type your post title\",\n    required: true,\n    name: \"postTitle\",\n    value: state.postTitle,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: \"post-cat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 4,\n    md: 2,\n    className: \"cat-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Select Category\")), /*#__PURE__*/React.createElement(Grid, {\n    xs: 6,\n    sm: 4,\n    md: 2,\n    className: \"cat-chooser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(NativeSelect, {\n    id: \"Category\",\n    name: \"postCategory\",\n    className: \"cat-chooser-select\",\n    required: true,\n    fullWidth: true,\n    value: state.postCategory,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Career\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Career\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Engagement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"Engagement\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"HRTech\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"HRTech\")))), /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    style: {\n      background: 'white',\n      padding: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    placeholder: \"O Monk, share your wisdom to the seekers !\",\n    multiline: true,\n    fullWidth: true,\n    rowsMax: 20,\n    rows: 5,\n    required: true,\n    name: \"postExplanation\",\n    value: state.postExplanation,\n    onChange: handleInput,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"file/*\",\n      id: \"post-attachment-file\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"post-attachment-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"post-file-attach\",\n      \"aria-label\": \"attachment\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CameraAltIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      background: '#f2f2f2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"cancel\",\n    style: {\n      background: '#fff',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    style: {\n      background: '#b32800',\n      color: '#fff',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Add\"))));\n}\n\nconst mapStateToProps = state => ({\n  info: state.info\n});\n\nexport default AddPost;","map":{"version":3,"sources":["/Users/manishverma/Desktop/Apple/Web/Office/monk2/RecruitingMonk/F-End/src/components/QnPostnPoll/AddPostForm.js"],"names":["React","Grid","InputBase","Typography","InputLabel","NativeSelect","Button","CameraAltIcon","InputAdornment","IconButton","AddPost","props","state","setState","useState","postTitle","postCategory","postExplanation","handleInput","event","target","name","value","handleSubmit","alert","JSON","stringify","sendPost","myHeaders","Headers","append","localStorage","getItem","urlencoded","URLSearchParams","info","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","console","log","catch","error","background","padding","marginRight","color","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, InputBase, Typography, InputLabel, NativeSelect, Button } from '@material-ui/core';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\n\nfunction AddPost(props) {\n\n    const [state, setState] = React.useState({\n        postTitle: '',\n        postCategory: '',\n        postExplanation: '',\n    });\n\n    const handleInput = (event) => {\n        setState({...state,\n            [event.target.name]: event.target.value\n        })\n    };\n\n    const handleSubmit = () => {\n        alert(\"Curent State is : \" + JSON.stringify(state));\n    }\n\n    const sendPost = ()=>{\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", localStorage.getItem('token'));\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"text\", state.postTitle);\n        urlencoded.append(\"name\", props.info.info.name);\n        urlencoded.append(\"avatar\", \"abc\");\n\n        var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n        };\n\n        fetch(\"https://recmonk.herokuapp.com/posts\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n        <Grid container>\n            <Grid item xs={12} style={{background: 'white', padding: '15px'}}> \n                <InputBase\n                    fullWidth\n                    multiline\n                    rowsMax={5}\n                    placeholder=\"Type your post title\"\n                    required\n                    name=\"postTitle\"\n                    value={state.postTitle}\n                    onChange={handleInput}\n                />\n            </Grid>\n\n            <Grid container className=\"post-cat-container\">\n                <Grid item xs={6} sm={4} md={2} className=\"cat-title\">\n                    <Typography>Select Category</Typography>\n                </Grid>\n                <Grid xs={6} sm={4} md={2} className=\"cat-chooser\">\n                <InputLabel htmlFor=\"Category\" />\n                    <NativeSelect id=\"Category\" name=\"postCategory\" className=\"cat-chooser-select\" required={true} fullWidth\n                        value={state.postCategory}  onChange={handleInput} >\n                        <option value=\"\" disabled selected>Category</option>\n                        <option value=\"Career\">Career</option>\n                        <option value=\"Engagement\">Engagement</option>\n                        <option value=\"HRTech\">HRTech</option>\n                    </NativeSelect>\n                </Grid>\n            </Grid>\n\n            <Grid xs={12} style={{background: 'white', padding: '15px'}}>\n                <InputBase\n                    placeholder=\"O Monk, share your wisdom to the seekers !\"\n                    multiline\n                    fullWidth\n                    rowsMax={20}\n                    rows={5}\n                    required\n                    name=\"postExplanation\"\n                    value={state.postExplanation}  onChange={handleInput}\n                    endAdornment={\n                            <InputAdornment position=\"end\">\n                                <input accept=\"file/*\" id=\"post-attachment-file\" type=\"file\" />\n                                <label htmlFor=\"post-attachment-file\">\n                                    <IconButton className=\"post-file-attach\" aria-label=\"attachment\" component=\"span\">\n                                        <CameraAltIcon />        \n                                    </IconButton>\n                                </label>\n                            </InputAdornment>\n                      }\n                />\n            </Grid>\n    \n            <Grid item xs={12} style={{background: '#f2f2f2'}}>\n                <br/>\n            </Grid>\n            <Grid item xs={12} align=\"right\">\n                <Button type=\"cancel\" style={{background: '#fff', marginRight: '10px'}}>Cancel</Button>\n                <Button type=\"submit\" style={{background: '#b32800', color: '#fff', marginRight: '10px'}}>Add</Button>\n            </Grid>\n        </Grid>\n        </form>\n    );\n}\n\nconst mapStateToProps = state => ({\n    info: state.info\n  })\n\nexport default AddPost;"]},"metadata":{},"sourceType":"module"}