{"ast":null,"code":"var _jsxFileName = \"/home/jt/Documents/Monk Works/RecruitingMonk/F-End/src/components/Pages/Answers/Reply/ReplyCompo.js\";\nimport React, { Component, useEffect } from 'react';\nimport { Avatar, Button, Menu, MenuItem, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fetchProfile } from '../../../../redux/dataFetchers/ProfileApi';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport '../Answers.css';\nvar cId = '';\nvar cName = '';\n\nclass ReplyCompo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReply = e => {\n      if (e.target.value === \"\") {\n        this.setState({\n          dis: true,\n          reply: \"\"\n        });\n      } else {\n        this.setState({\n          reply: e.target.value,\n          dis: false\n        });\n      }\n    };\n\n    this.submitReply = e => {\n      //database storing code will come here\n      this.setState({\n        reply: \"\",\n        dis: true\n      });\n    };\n\n    this.sendComment = e => {\n      e.preventDefault();\n\n      if (!localStorage.getItem('token')) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Please Login/Signup first.'\n        });\n      }\n\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", localStorage.getItem('token'));\n      myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      var urlencoded = new URLSearchParams();\n      urlencoded.append(\"text\", this.state.reply);\n      urlencoded.append(\"name\", cName);\n      urlencoded.append(\"avatar\", \"def\");\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n      };\n      var url = `https://recmonk.herokuapp.com/posts/comment/${cId}`;\n      fetch(url, requestOptions).then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      }, error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        Swal.fire({\n          icon: 'success',\n          title: 'Done...',\n          text: result.message\n        });\n      }).catch(error => {\n        console.log('error', error);\n        console.log(cName);\n      });\n    };\n\n    this.state = {\n      reply: \"\",\n      dis: true,\n      commentId: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log('id: ', this.props.cardId);\n    cId = this.props.cardId;\n    console.log('idByVar: ', cId);\n    console.log(\"User name: \", this.props.info.name);\n    cName = this.props.info.name;\n    console.log('nameByVar: ', cName);\n  }\n\n  render() {\n    if (this.props.login === true || localStorage.getItem('token')) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reply-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: this.sendComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        fullWidth: true,\n        multiline: true,\n        value: this.state.reply,\n        onChange: this.handleReply,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            style: {\n              display: 'none'\n            },\n            accept: \"file/*\",\n            id: \"reply-attachment-file\",\n            type: \"file\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"reply-attachment-file\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            className: \"reply-file-attach\",\n            \"aria-label\": \"attachment\",\n            component: \"span\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }\n          }))))\n        },\n        rowsMax: 100,\n        className: \"reply-field\",\n        rows: 4,\n        label: \"Your Reply\",\n        placeholder: \"Type Your Reply Here\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        align: \"right\",\n        style: {\n          paddingTop: '40px'\n        },\n        className: \"reply-container-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        size: \"small\",\n        variant: \"contained\",\n        className: \"Submit-reply\",\n        disabled: this.state.dis,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, \"Reply\")))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: '#333333'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, \"You must be logged in to reply to an answer.\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  info: state.profile.info\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProfile: () => {\n    dispatch(fetchProfile());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ReplyCompo));","map":{"version":3,"sources":["/home/jt/Documents/Monk Works/RecruitingMonk/F-End/src/components/Pages/Answers/Reply/ReplyCompo.js"],"names":["React","Component","useEffect","Avatar","Button","Menu","MenuItem","Typography","TextField","AttachmentIcon","InputAdornment","IconButton","fetchProfile","withRouter","connect","Swal","cId","cName","ReplyCompo","constructor","props","handleReply","e","target","value","setState","dis","reply","submitReply","sendComment","preventDefault","localStorage","getItem","fire","icon","title","myHeaders","Headers","append","urlencoded","URLSearchParams","state","requestOptions","method","headers","body","redirect","url","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","result","console","log","text","catch","commentId","componentDidMount","cardId","info","name","render","login","endAdornment","display","paddingTop","color","mapStateToProps","profile","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react';\nimport { Avatar, Button, Menu, MenuItem, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fetchProfile } from '../../../../redux/dataFetchers/ProfileApi'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Swal from 'sweetalert2'\nimport '../Answers.css';\n\nvar cId = '';\nvar cName = '';\n\n\n\nclass ReplyCompo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reply: \"\",\n            dis: true,\n            commentId: ''\n          };\n    }\n\n    handleReply = e => {\n\n        if ( e.target.value === \"\" ) {\n            this.setState({\n                dis: true,\n                reply: \"\"\n              });\n        }\n        else {\n        this.setState({\n          reply: e.target.value,\n          dis: false\n        });\n        }\n    };\n    \n      submitReply = e => {\n\n        //database storing code will come here\n    \n        this.setState({\n          reply: \"\",\n          dis: true\n        });\n      };\n\n      sendComment = e=> {\n\n        e.preventDefault();\n        if(!localStorage.getItem('token'))\n        {\n          Swal.fire({\n            icon: 'error',\n            title: 'Please Login/Signup first.'\n          })\n        }\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", localStorage.getItem('token'));\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        \n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"text\", this.state.reply);\n        urlencoded.append(\"name\", cName);\n        urlencoded.append(\"avatar\", \"def\");\n        \n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: urlencoded,\n          redirect: 'follow'\n        };\n        \n        var url = `https://recmonk.herokuapp.com/posts/comment/${cId}`;\n\n        fetch(url, requestOptions)\n          .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })  \n        .then(response => response.json())\n          .then(result => {\n            console.log(result);\n            Swal.fire({\n                icon: 'success',\n                title: 'Done...',\n                text: result.message\n              })\n          })\n          .catch(error => {\n            console.log('error', error)\n            console.log(cName);\n            \n          });\n      }\n\n      componentDidMount(){\n        console.log('id: ', this.props.cardId)\n        cId = this.props.cardId;\n        console.log('idByVar: ', cId);\n        console.log(\"User name: \", this.props.info.name);\n        cName = this.props.info.name\n        console.log('nameByVar: ', cName);\n      }\n\n    render() {\n           \n        if( this.props.login === true || localStorage.getItem('token')) {   \n            return(\n            <div className=\"reply-container\">\n              <div>\n                <form noValidate autoComplete=\"off\" onSubmit={this.sendComment}>\n                \n                    <TextField fullWidth multiline value={this.state.reply}\n                    onChange={this.handleReply} InputProps={{\n                        endAdornment:\n                        <InputAdornment position=\"end\">\n                            <input style={{ display: 'none' }} accept=\"file/*\" id=\"reply-attachment-file\" type=\"file\" />\n                        <label htmlFor=\"reply-attachment-file\">\n                            <IconButton className=\"reply-file-attach\" aria-label=\"attachment\" component=\"span\">\n                            <AttachmentIcon />        \n                            </IconButton>\n                        </label>\n                        </InputAdornment>\n                      }}\n                    rowsMax={100} className=\"reply-field\" rows={4}\n                    label=\"Your Reply\" placeholder=\"Type Your Reply Here\" \n                    variant=\"outlined\" />\n\n                        <div align=\"right\" style={{ paddingTop: '40px' }} className=\"reply-container-buttons\">                          \n                            <Button type=\"submit\" size=\"small\" variant=\"contained\" className=\"Submit-reply\"\n                            disabled={this.state.dis}\n                            >Reply</Button>\n                        </div>            \n                </form>\n                </div>\n              \n          </div>\n            );\n        }\n        else {\n          return(\n            <div align=\"center\">\n              <p style={{color: '#333333'}}>You must be logged in to reply to an answer.</p>\n              </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n  info: state.profile.info\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProfile: () => {dispatch(fetchProfile())}\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ReplyCompo));"]},"metadata":{},"sourceType":"module"}