{"ast":null,"code":"var _jsxFileName = \"/Users/manishverma/Desktop/Apple/Web/Office/monk2/RecruitingMonk/F-End/src/components/Pages/Answers/Reply/ReplyCompo.js\";\nimport React, { Component } from 'react';\nimport { Avatar, Button, Menu, MenuItem, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fetchProfile } from '../../../../redux/dataFetchers/ProfileApi';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../Answers.css';\n\nclass ReplyCompo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReply = e => {\n      if (e.target.value === \"\") {\n        this.setState({\n          dis: true,\n          reply: \"\"\n        });\n      } else {\n        this.setState({\n          reply: e.target.value,\n          dis: false\n        });\n      }\n    };\n\n    this.submitReply = e => {\n      //database storing code will come here\n      this.setState({\n        reply: \"\",\n        dis: true\n      });\n    };\n\n    this.cancelReply = e => {\n      //hide the container\n      this.setState({\n        display: \"none\"\n      });\n    };\n\n    this.sendComment = e => {\n      e.preventDefault();\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", localStorage.getItem('token'));\n      myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      var urlencoded = new URLSearchParams();\n      urlencoded.append(\"text\", this.state.reply);\n      urlencoded.append(\"name\", this.props.info.info.name);\n      urlencoded.append(\"avatar\", \"def\");\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n      };\n      fetch(\"https://recmonk.herokuapp.com/posts\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n    };\n\n    this.state = {\n      reply: \"\",\n      dis: true,\n      display: \"block\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"User name: \", this.props.info.info.name);\n  }\n\n  render() {\n    if (this.props.login === true || localStorage.getItem('token')) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reply-container\",\n        style: {\n          display: this.state.display\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: this.sendComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        fullWidth: true,\n        multiline: true,\n        value: this.state.reply,\n        onChange: this.handleReply,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            accept: \"file/*\",\n            id: \"reply-attachment-file\",\n            type: \"file\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"reply-attachment-file\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            className: \"reply-file-attach\",\n            \"aria-label\": \"attachment\",\n            component: \"span\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }\n          }))))\n        },\n        rowsMax: 100,\n        className: \"reply-field\",\n        rows: 4,\n        label: \"Your Reply\",\n        placeholder: \"Type Your Reply Here\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        align: \"right\",\n        style: {\n          paddingTop: '40px'\n        },\n        className: \"reply-container-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        className: \"Cancel-reply\",\n        onClick: this.cancelReply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        size: \"small\",\n        variant: \"contained\",\n        className: \"Submit-reply\",\n        disabled: this.state.dis,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, \"Reply\")))), this.props.commentON == true ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comments\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"commentAvatar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        style: {\n          width: '35px',\n          height: '35px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"commentTexts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"commentName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '16px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 23\n        }\n      }, this.props.CName, \" \\xB7\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }\n      }, \"21 July\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"commetAns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, this.props.CText)))) : '');\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, \"You must be logged in to reply to an answer.\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  info: state.info\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProfile: () => {\n    dispatch(fetchProfile());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ReplyCompo));","map":{"version":3,"sources":["/Users/manishverma/Desktop/Apple/Web/Office/monk2/RecruitingMonk/F-End/src/components/Pages/Answers/Reply/ReplyCompo.js"],"names":["React","Component","Avatar","Button","Menu","MenuItem","Typography","TextField","AttachmentIcon","InputAdornment","IconButton","fetchProfile","withRouter","connect","ReplyCompo","constructor","props","handleReply","e","target","value","setState","dis","reply","submitReply","cancelReply","display","sendComment","preventDefault","myHeaders","Headers","append","localStorage","getItem","urlencoded","URLSearchParams","state","info","name","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","console","log","catch","error","componentDidMount","render","login","endAdornment","paddingTop","commentON","width","height","fontWeight","fontSize","CName","CText","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Avatar, Button, Menu, MenuItem, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fetchProfile } from '../../../../redux/dataFetchers/ProfileApi'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../Answers.css';\n\nclass ReplyCompo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reply: \"\",\n            dis: true,\n            display: \"block\"\n          };\n    }\n\n    handleReply = e => {\n\n        if ( e.target.value === \"\" ) {\n            this.setState({\n                dis: true,\n                reply: \"\"\n              });\n        }\n        else {\n        this.setState({\n          reply: e.target.value,\n          dis: false\n        });\n        }\n    };\n    \n      submitReply = e => {\n\n        //database storing code will come here\n    \n        this.setState({\n          reply: \"\",\n          dis: true\n        });\n      };\n\n      cancelReply = e => {\n        \n        //hide the container\n\n        this.setState({\n            display: \"none\"\n          });\n      }\n\n      sendComment = e=>{\n        e.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", localStorage.getItem('token'));\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"text\", this.state.reply);\n        urlencoded.append(\"name\", this.props.info.info.name);\n        urlencoded.append(\"avatar\", \"def\");\n\n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: urlencoded,\n          redirect: 'follow'\n        };\n\n        fetch(\"https://recmonk.herokuapp.com/posts\", requestOptions)\n          .then(response => response.text())\n          .then(result => console.log(result))\n          .catch(error => console.log('error', error));\n      }\n\n      componentDidMount(){\n        console.log(\"User name: \", this.props.info.info.name);\n\n      }\n\n\n    render() {\n            \n        if( this.props.login === true || localStorage.getItem('token')) {   \n            return(\n            <div className=\"reply-container\" style={{display: this.state.display}}>\n              <div>\n                <form noValidate autoComplete=\"off\" onSubmit={this.sendComment}>\n                \n                    <TextField fullWidth multiline value={this.state.reply}\n                    onChange={this.handleReply} InputProps={{\n                        endAdornment:\n                        <InputAdornment position=\"end\">\n                            <input accept=\"file/*\" id=\"reply-attachment-file\" type=\"file\" />\n                        <label htmlFor=\"reply-attachment-file\">\n                            <IconButton className=\"reply-file-attach\" aria-label=\"attachment\" component=\"span\">\n                            <AttachmentIcon />        \n                            </IconButton>\n                        </label>\n                        </InputAdornment>\n                      }}\n                    rowsMax={100} className=\"reply-field\" rows={4}\n                    label=\"Your Reply\" placeholder=\"Type Your Reply Here\" \n                    variant=\"outlined\" />\n\n                        <div align=\"right\" style={{ paddingTop: '40px' }} className=\"reply-container-buttons\">\n                            <Button size=\"small\" variant=\"contained\" className=\"Cancel-reply\"\n                            onClick={this.cancelReply}\n                            >Cancel</Button>\n                            \n                            <Button type=\"submit\" size=\"small\" variant=\"contained\" className=\"Submit-reply\"\n                            disabled={this.state.dis}\n                            >Reply</Button>\n                        </div>            \n                </form>\n                </div>\n                {this.props.commentON == true ? <div className=\"comments\">\n                  <div className=\"commentAvatar\">\n                    <Avatar style={{ width: '35px', height: '35px' }} />\n                  </div>\n                  <div className=\"commentTexts\">\n                    <div className=\"commentName\">\n                      <p style={{fontWeight: 'bold', fontSize: '16px'}}>{this.props.CName} ·</p>\n                      <p>21 July</p>\n                    </div>\n                    <div className=\"commetAns\">\n                    <p>{this.props.CText}</p>\n                    </div>\n                  </div>\n                </div> : ''}\n            </div>\n            );\n        }\n        else {\n            return(\n                <div align=\"center\">You must be logged in to reply to an answer.</div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n  info: state.info\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProfile: () => {dispatch(fetchProfile())}\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ReplyCompo));"]},"metadata":{},"sourceType":"module"}