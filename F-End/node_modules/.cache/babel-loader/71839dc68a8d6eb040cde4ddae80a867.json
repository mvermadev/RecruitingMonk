{"ast":null,"code":"var _jsxFileName = \"/Users/manishverma/Desktop/Apple/Web/Office/monk2/RecruitingMonk/F-End/src/components/Pages/Answers/Reply/ReplyCompo.js\";\nimport React, { Component, useEffect } from 'react';\nimport { Avatar, Button, Menu, MenuItem, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fetchProfile } from '../../../../redux/dataFetchers/ProfileApi';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport '../Answers.css';\nvar cId = '';\nvar cName = '';\n\nclass ReplyCompo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReply = e => {\n      if (e.target.value === \"\") {\n        this.setState({\n          dis: true,\n          reply: \"\"\n        });\n      } else {\n        this.setState({\n          reply: e.target.value,\n          dis: false\n        });\n      }\n    };\n\n    this.submitReply = e => {\n      //database storing code will come here\n      this.setState({\n        reply: \"\",\n        dis: true\n      });\n    };\n\n    this.cancelReply = e => {\n      //hide the container\n      this.setState({\n        display: \"none\"\n      });\n    };\n\n    this.sendComment = e => {\n      e.preventDefault();\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", localStorage.getItem('token'));\n      myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      var urlencoded = new URLSearchParams();\n      urlencoded.append(\"text\", this.state.reply);\n      urlencoded.append(\"name\", cName);\n      urlencoded.append(\"avatar\", \"def\");\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n      };\n      var url = `https://recmonk.herokuapp.com/posts/comment/${cId}`;\n      fetch(url, requestOptions).then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      }, error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        Swal.fire({\n          icon: 'success',\n          title: 'Done...',\n          text: result.message\n        });\n      }).catch(error => {\n        console.log('error', error);\n        console.log(cName);\n      });\n    };\n\n    this.state = {\n      reply: \"\",\n      dis: true,\n      display: \"block\",\n      commentId: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log('id: ', this.props.cardId);\n    cId = this.props.cardId;\n    console.log('idByVar: ', cId);\n    console.log('nameByVar: ', cName);\n    console.log(\"User name: \", this.props.info.info.name);\n    cName = this.props.info.info.name;\n  }\n\n  render() {\n    if (this.props.login === true || localStorage.getItem('token')) {\n      return (\n        /*#__PURE__*/\n        // <div className=\"reply-container\" style={{display: this.state.display}}>\n        //   <div>\n        //     <form noValidate autoComplete=\"off\" onSubmit={this.sendComment}>\n        //         <TextField fullWidth multiline value={this.state.reply}\n        //         onChange={this.handleReply} InputProps={{\n        //             endAdornment:\n        //             <InputAdornment position=\"end\">\n        //                 <input accept=\"file/*\" id=\"reply-attachment-file\" type=\"file\" />\n        //             <label htmlFor=\"reply-attachment-file\">\n        //                 <IconButton className=\"reply-file-attach\" aria-label=\"attachment\" component=\"span\">\n        //                 <AttachmentIcon />        \n        //                 </IconButton>\n        //             </label>\n        //             </InputAdornment>\n        //           }}\n        //         rowsMax={100} className=\"reply-field\" rows={4}\n        //         label=\"Your Reply\" placeholder=\"Type Your Reply Here\" \n        //         variant=\"outlined\" />\n        //             <div align=\"right\" style={{ paddingTop: '40px' }} className=\"reply-container-buttons\">\n        //                 <Button size=\"small\" variant=\"contained\" className=\"Cancel-reply\"\n        //                 onClick={this.cancelReply}\n        //                 >Cancel</Button>\n        //                 <Button type=\"submit\" size=\"small\" variant=\"contained\" className=\"Submit-reply\"\n        //                 disabled={this.state.dis}\n        //                 >Reply</Button>\n        //             </div>            \n        //     </form>\n        //     </div>\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }\n        }, this.props.commentON == true ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"comments\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 59\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"commentAvatar\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          style: {\n            width: '35px',\n            height: '35px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"commentTexts\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"commentName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontWeight: 'bold',\n            fontSize: '16px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 39\n          }\n        }, this.props.CName, \" \\xB7\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 39\n          }\n        }, \"21 July\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"commetAns\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 37\n          }\n        }, this.props.CText)))) : '') // </div>\n\n      );\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, \"You must be logged in to reply to an answer.\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  info: state.info\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProfile: () => {\n    dispatch(fetchProfile());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ReplyCompo));","map":{"version":3,"sources":["/Users/manishverma/Desktop/Apple/Web/Office/monk2/RecruitingMonk/F-End/src/components/Pages/Answers/Reply/ReplyCompo.js"],"names":["React","Component","useEffect","Avatar","Button","Menu","MenuItem","Typography","TextField","AttachmentIcon","InputAdornment","IconButton","fetchProfile","withRouter","connect","Swal","cId","cName","ReplyCompo","constructor","props","handleReply","e","target","value","setState","dis","reply","submitReply","cancelReply","display","sendComment","preventDefault","myHeaders","Headers","append","localStorage","getItem","urlencoded","URLSearchParams","state","requestOptions","method","headers","body","redirect","url","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","result","console","log","fire","icon","title","text","catch","commentId","componentDidMount","cardId","info","name","render","login","commentON","width","height","fontWeight","fontSize","CName","CText","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react';\nimport { Avatar, Button, Menu, MenuItem, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fetchProfile } from '../../../../redux/dataFetchers/ProfileApi'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Swal from 'sweetalert2'\nimport '../Answers.css';\n\nvar cId = '';\nvar cName = '';\n\n\n\nclass ReplyCompo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reply: \"\",\n            dis: true,\n            display: \"block\",\n            commentId: ''\n          };\n    }\n\n    handleReply = e => {\n\n        if ( e.target.value === \"\" ) {\n            this.setState({\n                dis: true,\n                reply: \"\"\n              });\n        }\n        else {\n        this.setState({\n          reply: e.target.value,\n          dis: false\n        });\n        }\n    };\n    \n      submitReply = e => {\n\n        //database storing code will come here\n    \n        this.setState({\n          reply: \"\",\n          dis: true\n        });\n      };\n\n      cancelReply = e => {\n        \n        //hide the container\n\n        this.setState({\n            display: \"none\"\n          });\n      }\n\n      sendComment = e=> {\n\n        e.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", localStorage.getItem('token'));\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        \n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"text\", this.state.reply);\n        urlencoded.append(\"name\", cName);\n        urlencoded.append(\"avatar\", \"def\");\n        \n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: urlencoded,\n          redirect: 'follow'\n        };\n        \n        var url = `https://recmonk.herokuapp.com/posts/comment/${cId}`;\n\n        fetch(url, requestOptions)\n          .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })  \n        .then(response => response.json())\n          .then(result => {\n            console.log(result);\n            Swal.fire({\n                icon: 'success',\n                title: 'Done...',\n                text: result.message\n              })\n          })\n          .catch(error => {\n            console.log('error', error)\n            console.log(cName);\n            \n          });\n      }\n\n      componentDidMount(){\n        console.log('id: ', this.props.cardId)\n        cId = this.props.cardId;\n        console.log('idByVar: ', cId);\n        console.log('nameByVar: ', cName);\n        console.log(\"User name: \", this.props.info.info.name);\n        cName = this.props.info.info.name\n      }\n\n    render() {\n           \n        if( this.props.login === true || localStorage.getItem('token')) {   \n            return(\n            // <div className=\"reply-container\" style={{display: this.state.display}}>\n            //   <div>\n            //     <form noValidate autoComplete=\"off\" onSubmit={this.sendComment}>\n                \n            //         <TextField fullWidth multiline value={this.state.reply}\n            //         onChange={this.handleReply} InputProps={{\n            //             endAdornment:\n            //             <InputAdornment position=\"end\">\n            //                 <input accept=\"file/*\" id=\"reply-attachment-file\" type=\"file\" />\n            //             <label htmlFor=\"reply-attachment-file\">\n            //                 <IconButton className=\"reply-file-attach\" aria-label=\"attachment\" component=\"span\">\n            //                 <AttachmentIcon />        \n            //                 </IconButton>\n            //             </label>\n            //             </InputAdornment>\n            //           }}\n            //         rowsMax={100} className=\"reply-field\" rows={4}\n            //         label=\"Your Reply\" placeholder=\"Type Your Reply Here\" \n            //         variant=\"outlined\" />\n\n            //             <div align=\"right\" style={{ paddingTop: '40px' }} className=\"reply-container-buttons\">\n            //                 <Button size=\"small\" variant=\"contained\" className=\"Cancel-reply\"\n            //                 onClick={this.cancelReply}\n            //                 >Cancel</Button>\n                            \n            //                 <Button type=\"submit\" size=\"small\" variant=\"contained\" className=\"Submit-reply\"\n            //                 disabled={this.state.dis}\n            //                 >Reply</Button>\n            //             </div>            \n            //     </form>\n            //     </div>\n                <div>\n                          {this.props.commentON == true ? <div className=\"comments\">\n                                  <div className=\"commentAvatar\">\n                                    <Avatar style={{ width: '35px', height: '35px' }} />\n                                  </div>\n                                  <div className=\"commentTexts\">\n                                    <div className=\"commentName\">\n                                      <p style={{fontWeight: 'bold', fontSize: '16px'}}>{this.props.CName} ·</p>\n                                      <p>21 July</p>\n                                    </div>\n                                    <div className=\"commetAns\">\n                                    <p>{this.props.CText}</p>\n                                    </div>\n                                  </div>\n                                </div> : ''}\n                </div>  \n          // </div>\n            );\n        }\n        else {\n          return(\n            <div align=\"center\">You must be logged in to reply to an answer.</div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n  info: state.info\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProfile: () => {dispatch(fetchProfile())}\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ReplyCompo));"]},"metadata":{},"sourceType":"module"}