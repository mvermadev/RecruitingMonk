{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { ADD_PROFILE } from '../constants/index';\nexport const fetchProfile = () => dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", localStorage.token);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"username\": localStorage.username\n  });\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  return fetch(\"https://recmonk.herokuapp.com/profile\", requestOptions).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => {\n    console.log(response);\n    response.json();\n  }).then(data => {\n    console.log('profileData: ', data);\n    dispatch(addProfile(data));\n  }).catch(error => console.log(error.message));\n};\nexport const addProfile = data => ({\n  type: ADD_PROFILE,\n  payload: data\n});","map":{"version":3,"sources":["/home/jt/Documents/Monk Works/RecruitingMonk/F-End/src/redux/dataFetchers/ProfileApi.js"],"names":["Swal","ADD_PROFILE","fetchProfile","dispatch","myHeaders","Headers","append","localStorage","token","raw","JSON","stringify","username","requestOptions","method","headers","body","redirect","fetch","then","response","ok","error","Error","status","statusText","errmess","message","console","log","json","data","addProfile","catch","type","payload"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAD,IAAc;AAE5C,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkCC,YAAY,CAACC,KAA/C;AACAJ,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,MAAIG,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,gBAAWJ,YAAY,CAACK;AAAzB,GAAf,CAAV;AAEA,MAAIC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAEX,SAFU;AAGnBY,IAAAA,IAAI,EAAEP,GAHa;AAInBQ,IAAAA,QAAQ,EAAE;AAJS,GAArB;AAOA,SAAOC,KAAK,CAAC,uCAAD,EAA0CL,cAA1C,CAAL,CACFM,IADE,CACGC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZ,aAAOD,QAAP;AACH,KAFD,MAGK;AACD,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACH;AACJ,GAVE,EAWHA,KAAK,IAAI;AACL,QAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,UAAMD,OAAN;AACH,GAdE,EAeFP,IAfE,CAeGC,QAAQ,IAAI;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAA,IAAAA,QAAQ,CAACU,IAAT;AAAgB,GAjBjB,EAkBFX,IAlBE,CAkBGY,IAAI,IAAI;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,IAA7B;AACA5B,IAAAA,QAAQ,CAAC6B,UAAU,CAACD,IAAD,CAAX,CAAR;AACH,GArBE,EAsBFE,KAtBE,CAsBIX,KAAK,IAAIM,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACK,OAAlB,CAtBb,CAAP;AAwBH,CAvCM;AAyCP,OAAO,MAAMK,UAAU,GAAID,IAAD,KAAW;AACjCG,EAAAA,IAAI,EAAEjC,WAD2B;AAEjCkC,EAAAA,OAAO,EAAEJ;AAFwB,CAAX,CAAnB","sourcesContent":["import Swal from 'sweetalert2'\nimport { ADD_PROFILE } from '../constants/index'\n\nexport const fetchProfile = () => (dispatch) => {\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", localStorage.token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\"username\":localStorage.username});\n\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    return fetch(\"https://recmonk.herokuapp.com/profile\", requestOptions)\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => {\n            console.log(response)\n            response.json()})\n        .then(data => {\n            console.log('profileData: ', data);\n            dispatch(addProfile(data))\n        })\n        .catch(error => console.log(error.message));\n\n}\n\nexport const addProfile = (data) => ({\n    type: ADD_PROFILE,\n    payload: data\n});"]},"metadata":{},"sourceType":"module"}